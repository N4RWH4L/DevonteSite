for _, v in pairs(game.CoreGui:GetChildren()) do
	if v.Name == "BlueUI" then
		v:Destroy()
	end
end

local Library = {TabCount = 0}

function Library:Main(title, subtitle)
    local BlueUI = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local HubHolder = Instance.new("Frame")
    local UICorner_13 = Instance.new("UICorner")
    local TabHolder = Instance.new("ScrollingFrame")
    local UIListLayout_3 = Instance.new("UIListLayout")
    local Title = Instance.new("TextLabel")
    local Subtitle = Instance.new("TextLabel")
    local Bar = Instance.new("Frame")
    local UICorner_16 = Instance.new("UICorner")

    BlueUI.Name = "BlueUI"
    BlueUI.Parent = game.CoreGui

    Main.Name = "Main"
    Main.Parent = UILib
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    Main.BorderSizePixel = 0
    Main.ClipsDescendants = true
    Main.Position = UDim2.new(0.499356061, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 519, 0, 331)
    Main.Active = true

    HubHolder.Name = "HubHolder"
    HubHolder.Parent = Main
    HubHolder.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    HubHolder.BorderSizePixel = 0
    HubHolder.Position = UDim2.new(0.253109932, 0, 0, 0)
    HubHolder.Size = UDim2.new(0, 387, 0, 331)

    UICorner_13.CornerRadius = UDim.new(0, 6)
    UICorner_13.Parent = HubHolder

    TabHolder.Name = "TabHolder"
    TabHolder.Parent = Main
    TabHolder.Active = true
    TabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabHolder.BackgroundTransparency = 1.000
    TabHolder.Position = UDim2.new(0, 0, 0.166163146, 0)
    TabHolder.Size = UDim2.new(0, 130, 0, 276)
    TabHolder.CanvasSize = UDim2.new(0, 0, 1, 0)
    TabHolder.ScrollBarThickness = 0

    UIListLayout_3.Parent = TabHolder
    UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout_3.Padding = UDim.new(0, 2)

    TabHolder.CanvasSize = UDim2.new(0, 0, 0, UIListLayout_3.AbsoluteContentSize.Y)

    Title.Name = "Title"
    Title.Parent = Main
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0.0131292623, 0, 0.0233895574, 0)
    Title.Size = UDim2.new(0, 115, 0, 23)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = title
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextScaled = true
    Title.TextSize = 14.000
    Title.TextWrapped = true

    Subtitle.Name = "Subtitle"
    Subtitle.Parent = Main
    Subtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Subtitle.BackgroundTransparency = 1.000
    Subtitle.Position = UDim2.new(0.0130000003, 0, 0.0949999988, 0)
    Subtitle.Size = UDim2.new(0, 115, 0, 13)
    Subtitle.Font = Enum.Font.GothamSemibold
    Subtitle.Text = subtitle
    Subtitle.TextColor3 = Color3.fromRGB(140, 140, 140)
    Subtitle.TextScaled = true
    Subtitle.TextSize = 14.000
    Subtitle.TextWrapped = true

    Bar.Name = "Bar"
    Bar.Parent = Main
    Bar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Bar.BorderSizePixel = 0
    Bar.Position = UDim2.new(0.252408475, 0, 0, 0)
    Bar.Size = UDim2.new(0, 3, 0, 331)

    UICorner_16.CornerRadius = UDim.new(0, 6)
    UICorner_16.Parent = Main

    function dragify(Frame)
        dragToggle = nil
        dragSpeed = nil -- You can edit this.
        dragInput = nil
        dragStart = nil
        dragPos = nil

        function updateInput(input)
            Delta = input.Position - dragStart
            Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
            game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
        end

        Frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                dragStart = input.Position
                startPos = Frame.Position
                input.Changed:Connect(function()
                    if (input.UserInputState == Enum.UserInputState.End) then
                        dragToggle = false
                    end
                end)
            end
        end)

        Frame.InputChanged:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                dragInput = input
            end
        end)

        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if (input == dragInput and dragToggle) then
                updateInput(input)
            end
        end)
    end

    dragify(Main)

    local TabHolded = {}
        
    function TabHolded:Tab(name)
        local TabButton = Instance.new("TextButton")
        local UICorner_14 = Instance.new("UICorner")
        local TabName = Instance.new("TextLabel")
        local HubTitle = Instance.new("TextLabel")
        local Hub = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local UIPadding = Instance.new("UIPadding")

        TabButton.Name = "TabButton"
        TabButton.Parent = TabHolder
        TabButton.BackgroundColor3 = Library.TabCount == 0 and Color3.fromRGB(3, 146, 255) or Color3.fromRGB(45, 45, 45)
        TabButton.Position = UDim2.new(-0.269230783, 0, 0, 0)
        TabButton.Size = UDim2.new(0, 122, 0, 29)
        TabButton.AutoButtonColor = false
        TabButton.Font = Enum.Font.SourceSans
        TabButton.Text = ""
        TabButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        TabButton.TextSize = 14.000

        UICorner_14.CornerRadius = UDim.new(0, 3)
        UICorner_14.Parent = TabButton

        TabName.Name = "TabName"
        TabName.Parent = TabButton
        TabName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabName.BackgroundTransparency = 1.000
        TabName.Position = UDim2.new(0.0573770478, 0, 0.225806445, 0)
        TabName.Size = UDim2.new(0, 115, 0, 17)
        TabName.Font = Enum.Font.GothamSemibold
        TabName.Text = name
        TabName.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabName.TextScaled = true
        TabName.TextSize = 14.000
        TabName.TextWrapped = true
        TabName.TextXAlignment = Enum.TextXAlignment.Left

        Hub.Name = "Hub"
        Hub.Parent = HubHolder
        Hub.Active = true
        Hub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Hub.BackgroundTransparency = 1.000
        Hub.BorderSizePixel = 0
        Hub.Position = UDim2.new(0, 0, 0.0989182591, 0)
        Hub.Size = UDim2.new(0, 387, 0, 298)
        Hub.ScrollBarThickness = 0
        Hub.Visible = Library.TabCount == 0 and true or false

        UIListLayout.Parent = Hub
        UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)

        UIPadding.Parent = Hub
        UIPadding.PaddingTop = UDim.new(0, 5)

        Hub.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10)
        
        HubTitle.Name = "HubTitle"
        HubTitle.Parent = HubHolder
        HubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        HubTitle.BackgroundTransparency = 1.000
        HubTitle.Position = UDim2.new(0.365663826, 0, 0.0233895574, 0)
        HubTitle.Size = UDim2.new(0, 115, 0, 23)
        HubTitle.Font = Enum.Font.GothamSemibold
        HubTitle.Text = "Tab"
        HubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        HubTitle.TextScaled = true
        HubTitle.TextSize = 14.000
        HubTitle.TextWrapped = true
        
        TabButton.MouseButton1Click:Connect(function()
            TabButton.Selected = true
            for i,v in pairs(TabHolder:GetChildren()) do
                if v.Name == "TabButton" and v.Selected == false then
                    v.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                end
                if (not v:IsA("UIListLayout")) and (not v:IsA("Script"))then
                    v.Selected = false
                end
            end
            if TabButton.BackgroundColor3 == Color3.fromRGB(45, 45, 45) then
                game:GetService("TweenService"):Create(TabButton, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(3, 146, 255)}):Play()
            end
            for i,v in pairs(HubHolder:GetChildren()) do
				if v.Name == "Hub" then
					v.Visible = false
				end
			end
			Hub.Visible = true
        end)
        

        Library.TabCount = Library.TabCount + 1

        local Lib = {}

        function Lib:Button(name, callback)
            local Button = Instance.new("TextButton")
            local UICorner = Instance.new("UICorner")
            local ButtonName = Instance.new("TextLabel")

            Button.Name = "Button"
            Button.Parent = Hub
            Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            Button.Position = UDim2.new(0.0465116277, 0, 0.0167785231, 0)
            Button.Size = UDim2.new(0, 369, 0, 29)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = ""
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.TextSize = 14.000

            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = Button

            ButtonName.Name = "ButtonName"
            ButtonName.Parent = Button
            ButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonName.BackgroundTransparency = 1.000
            ButtonName.Position = UDim2.new(0.0159999784, 0, 0.12386664, 0)
            ButtonName.Size = UDim2.new(0, 353, 0, 20)
            ButtonName.Font = Enum.Font.GothamSemibold
            ButtonName.Text = "Button"
            ButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonName.TextScaled = true
            ButtonName.TextSize = 14.000
            ButtonName.TextWrapped = true
            ButtonName.TextXAlignment = Enum.TextXAlignment.Left

            Button.MouseButton1Click:Connect(function()
                game:GetService("TweenService"):Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(3, 146, 255)}):Play()
                wait(0.2)
                game:GetService("TweenService"):Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}):Play()
                callback()
            end)
        end
        function Lib:Toggle(name, callback)
            local ToggleTouch = Instance.new("TextButton")
            local UICorner_2 = Instance.new("UICorner")
            local ToggleName = Instance.new("TextLabel")
            local ToggleBack = Instance.new("ImageLabel")
            local Toggle = Instance.new("ImageLabel")

            ToggleTouch.Name = "ToggleTouch"
            ToggleTouch.Parent = Hub
            ToggleTouch.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            ToggleTouch.Position = UDim2.new(0.0258397926, 0, 0.130872488, 0)
            ToggleTouch.Size = UDim2.new(0, 369, 0, 29)
            ToggleTouch.AutoButtonColor = false
            ToggleTouch.Font = Enum.Font.SourceSans
            ToggleTouch.Text = ""
            ToggleTouch.TextColor3 = Color3.fromRGB(0, 0, 0)
            ToggleTouch.TextSize = 14.000

            UICorner_2.CornerRadius = UDim.new(0, 3)
            UICorner_2.Parent = ToggleTouch

            ToggleName.Name = "ToggleName"
            ToggleName.Parent = ToggleTouch
            ToggleName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleName.BackgroundTransparency = 1.000
            ToggleName.Position = UDim2.new(0.0158747565, 0, 0.123866647, 0)
            ToggleName.Size = UDim2.new(0, 406, 0, 20)
            ToggleName.Font = Enum.Font.GothamSemibold
            ToggleName.Text = "Toggle"
            ToggleName.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleName.TextScaled = true
            ToggleName.TextSize = 14.000
            ToggleName.TextWrapped = true
            ToggleName.TextXAlignment = Enum.TextXAlignment.Left

            ToggleBack.Name = "ToggleBack"
            ToggleBack.Parent = ToggleTouch
            ToggleBack.BackgroundColor3 = Color3.fromRGB(167, 167, 167)
            ToggleBack.BackgroundTransparency = 1.000
            ToggleBack.ClipsDescendants = true
            ToggleBack.Position = UDim2.new(0.871485531, 0, 0.137931034, 0)
            ToggleBack.Size = UDim2.new(0, 40, 0, 20)
            ToggleBack.Image = "rbxassetid://3570695787"
            ToggleBack.ImageColor3 = Color3.fromRGB(160, 160, 160)
            ToggleBack.ScaleType = Enum.ScaleType.Slice
            ToggleBack.SliceCenter = Rect.new(100, 100, 100, 100)
            ToggleBack.SliceScale = 0.120

            Toggle.Name = "Toggle"
            Toggle.Parent = ToggleBack
            Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.BackgroundTransparency = 1.000
            Toggle.BorderSizePixel = 0
            Toggle.Position = UDim2.new(0.0799999982, 0, 0.100000001, 0)
            Toggle.Size = UDim2.new(0, 17, 0, 16)
            Toggle.Image = "rbxassetid://3570695787"
            Toggle.ScaleType = Enum.ScaleType.Slice
            Toggle.SliceCenter = Rect.new(100, 100, 100, 100)
            Toggle.SliceScale = 0.120

            local toggle = false
            ToggleTouch.MouseButton1Click:Connect(function()
                toggle = not toggle
                if toggle then 
                    Toggle:TweenPosition(UDim2.new(0.52, 0,0.1, 0),"InOut", "Quad", 0.3, true)
                    game:GetService("TweenService"):Create(ToggleBack, TweenInfo.new(0.3), {ImageColor3 = Color3.fromRGB(3, 146, 255)}):Play()
                elseif (not toggle) then 
                    Toggle:TweenPosition(UDim2.new(0.08, 0,0.1, 0),"InOut", "Quad", 0.3, true)
                    game:GetService("TweenService"):Create(ToggleBack, TweenInfo.new(0.3), {ImageColor3 = Color3.fromRGB(167, 167, 167)}):Play()
                end
            end)
        end

        function Lib:Slider(name, min, max, start, callback)
            local SliderName = Instance.new("TextLabel")
            local SliderValue = Instance.new("TextLabel")
            local SliderBack2 = Instance.new("Frame")
            local UICorner_4 = Instance.new("UICorner")
            local Slider = Instance.new("Frame")
            local SliderBack = Instance.new("TextButton")
            local UICorner_3 = Instance.new("UICorner")
            local UICorner_5 = Instance.new("UICorner")
            local dragging = false

            SliderBack.Name = "SliderBack"
            SliderBack.Parent = Hub
            SliderBack.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            SliderBack.Position = UDim2.new(0.0219638236, 0, 0.244966447, 0)
            SliderBack.Size = UDim2.new(0, 369, 0, 40)
            SliderBack.AutoButtonColor = false
            SliderBack.Font = Enum.Font.SourceSans
            SliderBack.Text = ""
            SliderBack.TextColor3 = Color3.fromRGB(0, 0, 0)
            SliderBack.TextSize = 14.000

            UICorner_3.CornerRadius = UDim.new(0, 3)
            UICorner_3.Parent = SliderBack

            SliderName.Name = "SliderName"
            SliderName.Parent = SliderBack
            SliderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderName.BackgroundTransparency = 1.000
            SliderName.Position = UDim2.new(0.0159999784, 0, 0.0900001526, 0)
            SliderName.Size = UDim2.new(0, 303, 0, 16)
            SliderName.Font = Enum.Font.GothamSemibold
            SliderName.Text = name
            SliderName.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderName.TextScaled = true
            SliderName.TextSize = 14.000
            SliderName.TextWrapped = true
            SliderName.TextXAlignment = Enum.TextXAlignment.Left

            SliderValue.Name = "SliderValue"
            SliderValue.Parent = SliderBack
            SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.BackgroundTransparency = 1.000
            SliderValue.Position = UDim2.new(0.834965587, 0, 0.0738662705, 0)
            SliderValue.Size = UDim2.new(0, 52, 0, 16)
            SliderValue.Font = Enum.Font.GothamSemibold
            SliderValue.Text = tostring(start .. "/" .. max)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextScaled = true
            SliderValue.TextSize = 14.000
            SliderValue.TextWrapped = true
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right

            SliderBack2.Name = "SliderBack"
            SliderBack2.Parent = SliderBack
            SliderBack2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderBack2.Position = UDim2.new(0.0189999994, 0, 0.649999976, 0)
            SliderBack2.Size = UDim2.new(0, 355, 0, 5)

            UICorner_4.CornerRadius = UDim.new(0, 3)
            UICorner_4.Parent = SliderBack2

            Slider.Name = "Slider"
            Slider.Parent = SliderBack2
            Slider.BackgroundColor3 = Color3.fromRGB(3, 146, 255)
            Slider.Position = UDim2.new(-0.00071832363, 0, 0, 0)
            Slider.Size = UDim2.new(0, 178, 0, 5)

            UICorner_5.CornerRadius = UDim.new(0, 100)
            UICorner_5.Parent = Slider

            local function slide(input)
				local pos = UDim2.new(math.clamp((input.Position.X - SliderBack.AbsolutePosition.X) / SliderBack.AbsoluteSize.X, 0, 1), 0, 1, 0);
				Slider:TweenSize(pos, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
				local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min);
				SliderValue.Text = tostring(value) .. "/" .. max;
				callback(value);
			end;

			SliderBack.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true;
				end;
			end);

			SliderBack.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false;
				end;
			end);

			SliderBack.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					slide(input);
				end;
			end);

			game:GetService("UserInputService").InputChanged:Connect(function(input)
				if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
					slide(input);
				end;
			end);
        end

        function Lib:Dropdown(name, options, callback)
            local DropdownBack = Instance.new("TextButton")
            local UICorner_6 = Instance.new("UICorner")
            local DropdownName = Instance.new("TextLabel")
            local DropdownArrow = Instance.new("ImageLabel")
            local DropHubBack = Instance.new("Frame")
            local DropHub = Instance.new("ScrollingFrame")
            local UIListLayout_2 = Instance.new("UIListLayout")
            local UIPadding_2 = Instance.new("UIPadding")
            local UICorner_8 = Instance.new("UICorner")
            local DropSearch = Instance.new("TextBox")
            local DropSearchIcon = Instance.new("ImageButton")

            DropdownBack.Name = "DropdownBack"
            DropdownBack.Parent = Hub
            DropdownBack.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            DropdownBack.Position = UDim2.new(0.0465116277, 0, 0.0167785231, 0)
            DropdownBack.Size = UDim2.new(0, 369, 0, 29)
            DropdownBack.AutoButtonColor = false
            DropdownBack.Font = Enum.Font.SourceSans
            DropdownBack.Text = ""
            DropdownBack.TextColor3 = Color3.fromRGB(0, 0, 0)
            DropdownBack.TextSize = 14.000

            UICorner_6.CornerRadius = UDim.new(0, 3)
            UICorner_6.Parent = DropdownBack

            DropdownName.Name = "DropdownName"
            DropdownName.Parent = DropdownBack
            DropdownName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownName.BackgroundTransparency = 1.000
            DropdownName.Position = UDim2.new(0.0159999784, 0, 0.12386664, 0)
            DropdownName.Size = UDim2.new(0, 353, 0, 20)
            DropdownName.Font = Enum.Font.GothamSemibold
            DropdownName.Text = name
            DropdownName.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropdownName.TextScaled = true
            DropdownName.TextSize = 14.000
            DropdownName.TextWrapped = true
            DropdownName.TextXAlignment = Enum.TextXAlignment.Left

            DropdownArrow.Name = "DropdownArrow"
            DropdownArrow.Parent = DropdownBack
            DropdownArrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownArrow.BackgroundTransparency = 1.000
            DropdownArrow.Position = UDim2.new(0.916000009, 0, 0.0689999983, 0)
            DropdownArrow.Rotation = 180.000
            DropdownArrow.Size = UDim2.new(0, 25, 0, 25)
            DropdownArrow.Image = "rbxassetid://3926307971"
            DropdownArrow.ImageRectOffset = Vector2.new(324, 524)
            DropdownArrow.ImageRectSize = Vector2.new(36, 36)

            DropHubBack.Name = "DropHubBack"
            DropHubBack.Parent = DropdownBack
            DropHubBack.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            DropHubBack.BorderSizePixel = 0
            DropHubBack.ClipsDescendants = true
            DropHubBack.Position = UDim2.new(0, 0, 0.813521802, 0)
            DropHubBack.Size = UDim2.new(0, 369, 0, 0)
            DropHubBack.ZIndex = 10

            DropHub.Name = "DropHub"
            DropHub.Parent = DropHubBack
            DropHub.Active = true
            DropHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropHub.BackgroundTransparency = 1.000
            DropHub.BorderSizePixel = 0
            DropHub.Position = UDim2.new(0, 0, 0.157534242, 0)
            DropHub.Size = UDim2.new(0, 369, 0, 122)
            DropHub.ZIndex = 10
            DropHub.ScrollBarThickness = 0

            UIListLayout_2.Parent = DropHub
            UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
            UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout_2.Padding = UDim.new(0, 5)

            UIPadding_2.Parent = DropHub
            UIPadding_2.PaddingTop = UDim.new(0, 5)

            DropHub.CanvasSize = UDim2.new(0, 0, 0, UIListLayout_2.AbsoluteContentSize.Y)

            UICorner_8.CornerRadius = UDim.new(0, 3)
            UICorner_8.Parent = DropHubBack

            DropSearch.Name = "DropSearch"
            DropSearch.Parent = DropHubBack
            DropSearch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropSearch.BackgroundTransparency = 1.000
            DropSearch.ClipsDescendants = true
            DropSearch.Position = UDim2.new(0.0840108395, 0, 0.0233484562, 0)
            DropSearch.Size = UDim2.new(0, 338, 0, 19)
            DropSearch.ZIndex = 10
            DropSearch.Font = Enum.Font.GothamSemibold
            DropSearch.PlaceholderColor3 = Color3.fromRGB(170, 169, 171)
            DropSearch.PlaceholderText = "Search"
            DropSearch.Text = ""
            DropSearch.TextColor3 = Color3.fromRGB(170, 169, 171)
            DropSearch.TextSize = 20.000
            DropSearch.TextWrapped = true
            DropSearch.TextXAlignment = Enum.TextXAlignment.Left

            DropSearchIcon.Name = "DropSearchIcon"
            DropSearchIcon.Parent = DropHubBack
            DropSearchIcon.BackgroundTransparency = 1.000
            DropSearchIcon.LayoutOrder = 1
            DropSearchIcon.Position = UDim2.new(0.0135501353, 0, 0.0205479451, 0)
            DropSearchIcon.Size = UDim2.new(0, 20, 0, 20)
            DropSearchIcon.ZIndex = 10
            DropSearchIcon.Image = "rbxassetid://3926305904"
            DropSearchIcon.ImageColor3 = Color3.fromRGB(207, 207, 207)
            DropSearchIcon.ImageRectOffset = Vector2.new(964, 324)
            DropSearchIcon.ImageRectSize = Vector2.new(36, 36)

            local searchbar = DropSearch
            local items = DropHub
            local Update = false
            
            function UpdateResults()
                local search = string.lower(searchbar.Text)
                for i,v in pairs(items:GetChildren()) do
                    if v:IsA("GuiButton") then
                        if search ~= "" then
                            local item = string.lower(v.DropButtonName.Text)
                            if string.find(item, search) then
                                v.Visible = true
                            else
                                v.Visible = false
                            end
                        end
                    end
                end
            end
            
            searchbar.Changed:Connect(UpdateResults)

            DropdownBack.MouseButton1Click:Connect(function()
                if DropHubBack.Size == UDim2.new(0, 369,0, 0) then
                    game:GetService("TweenService"):Create(DropdownArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Rotation = 0}):Play();
                    DropHubBack:TweenSize(UDim2.new(0, 369,0, 146), "InOut", "Quad", 0.2, true)
                else 
                    game:GetService("TweenService"):Create(DropdownArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Rotation = 180}):Play();
                    DropHubBack:TweenSize(UDim2.new(0, 369,0, 0), "InOut", "Quad", 0.2, true)
                end
            end)

            for _, v in pairs(options) do
                local DropButton = Instance.new("TextButton")
                local UICorner_7 = Instance.new("UICorner")
                local DropButtonName = Instance.new("TextLabel")

                DropButton.Name = "DropButton"
                DropButton.Parent = DropHub
                DropButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                DropButton.Position = UDim2.new(0, 0, 0.0409838557, 0)
                DropButton.Size = UDim2.new(0, 358, 0, 29)
                DropButton.ZIndex = 10
                DropButton.AutoButtonColor = false
                DropButton.Font = Enum.Font.SourceSans
                DropButton.Text = ""
                DropButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                DropButton.TextSize = 14.000
    
                UICorner_7.CornerRadius = UDim.new(0, 3)
                UICorner_7.Parent = DropButton
    
                DropButtonName.Name = "DropButtonName"
                DropButtonName.Parent = DropButton
                DropButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DropButtonName.BackgroundTransparency = 1.000
                DropButtonName.Position = UDim2.new(0.0214200336, 0, 0.12386664, 0)
                DropButtonName.Size = UDim2.new(0, 353, 0, 20)
                DropButtonName.ZIndex = 10
                DropButtonName.Font = Enum.Font.GothamSemibold
                DropButtonName.Text = tostring(v)
                DropButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
                DropButtonName.TextScaled = true
                DropButtonName.TextSize = 14.000
                DropButtonName.TextWrapped = true

                DropButton.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(DropButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(55, 55, 55)}):Play()
                end)
                DropButton.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(DropButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}):Play()
                end)
                DropButton.MouseButton1Click:Connect(function()
                    callback(v)
                    if DropHubBack.Size == UDim2.new(0, 369,0, 146) then
                        game:GetService("TweenService"):Create(DropdownArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Rotation = 180}):Play();
                        DropHubBack:TweenSize(UDim2.new(0, 369,0, 0), "InOut", "Quad", 0.2, true)
                    end
                end)
            end
        end

        function Lib:Box(name, place, callback)
            local BoxBack = Instance.new("TextButton")
            local UICorner_11 = Instance.new("UICorner")
            local BoxName = Instance.new("TextLabel")
            local Box = Instance.new("TextBox")
            local UICorner_12 = Instance.new("UICorner")

            BoxBack.Name = "BoxBack"
            BoxBack.Parent = Hub
            BoxBack.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            BoxBack.Position = UDim2.new(0.0465116277, 0, 0.0167785231, 0)
            BoxBack.Size = UDim2.new(0, 369, 0, 29)
            BoxBack.AutoButtonColor = false
            BoxBack.Font = Enum.Font.SourceSans
            BoxBack.Text = ""
            BoxBack.TextColor3 = Color3.fromRGB(0, 0, 0)
            BoxBack.TextSize = 14.000

            UICorner_11.CornerRadius = UDim.new(0, 3)
            UICorner_11.Parent = BoxBack

            BoxName.Name = "BoxName"
            BoxName.Parent = BoxBack
            BoxName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BoxName.BackgroundTransparency = 1.000
            BoxName.Position = UDim2.new(0.0159999784, 0, 0.12386664, 0)
            BoxName.Size = UDim2.new(0, 302, 0, 20)
            BoxName.Font = Enum.Font.GothamSemibold
            BoxName.Text = name
            BoxName.TextColor3 = Color3.fromRGB(255, 255, 255)
            BoxName.TextScaled = true
            BoxName.TextSize = 14.000
            BoxName.TextWrapped = true
            BoxName.TextXAlignment = Enum.TextXAlignment.Left

            Box.Name = "Box"
            Box.Parent = BoxBack
            Box.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            Box.ClipsDescendants = true
            Box.Position = UDim2.new(0.834999979, 0, 0.150000006, 0)
            Box.Size = UDim2.new(0, 54, 0, 20)
            Box.Font = Enum.Font.GothamSemibold
            Box.PlaceholderColor3 = Color3.fromRGB(3, 146, 255)
            Box.PlaceholderText = place
            Box.Text = ""
            Box.TextColor3 = Color3.fromRGB(3, 146, 255)
            Box.TextSize = 18.000

            UICorner_12.CornerRadius = UDim.new(0, 3)
            UICorner_12.Parent = Box

            Box.Focused:Connect(function()
                KeyBindIntercept.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            end)
            Box.FocusLost:Connect(function()
                KeyBindIntercept.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            end)
        end

        function Lib:Label(text)
            local Label = Instance.new("TextLabel")
            
            Label.Name = "Label"
            Label.Parent = Hub
            Label.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            Label.BackgroundTransparency = 1.000
            Label.Size = UDim2.new(0, 369, 0, 20)
            Label.Font = Enum.Font.GothamSemibold
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.TextScaled = true
            Label.TextSize = 14.000
            Label.TextWrapped = true
        end

        function Lib:KeyBind(name, key) 
            local KeyBindBack = Instance.new("TextButton")
            local UICorner_9 = Instance.new("UICorner")
            local KeyBindName = Instance.new("TextLabel")
            local KeyBindKeyBack = Instance.new("Frame")
            local UICorner_10 = Instance.new("UICorner")
            local KeyBindKey = Instance.new("TextLabel")
            local KeyBindIntercept = Instance.new("Frame")

            KeyBindBack.Name = "KeyBindBack"
            KeyBindBack.Parent = Hub
            KeyBindBack.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            KeyBindBack.Position = UDim2.new(0.0465116277, 0, 0.0167785231, 0)
            KeyBindBack.Size = UDim2.new(0, 369, 0, 29)
            KeyBindBack.AutoButtonColor = false
            KeyBindBack.Font = Enum.Font.SourceSans
            KeyBindBack.Text = ""
            KeyBindBack.TextColor3 = Color3.fromRGB(0, 0, 0)
            KeyBindBack.TextSize = 14.000

            UICorner_9.CornerRadius = UDim.new(0, 3)
            UICorner_9.Parent = KeyBindBack

            KeyBindName.Name = "KeyBindName"
            KeyBindName.Parent = KeyBindBack
            KeyBindName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            KeyBindName.BackgroundTransparency = 1.000
            KeyBindName.Position = UDim2.new(0.0159999784, 0, 0.12386664, 0)
            KeyBindName.Size = UDim2.new(0, 302, 0, 20)
            KeyBindName.Font = Enum.Font.GothamSemibold
            KeyBindName.Text = name
            KeyBindName.TextColor3 = Color3.fromRGB(255, 255, 255)
            KeyBindName.TextScaled = true
            KeyBindName.TextSize = 14.000
            KeyBindName.TextWrapped = true
            KeyBindName.TextXAlignment = Enum.TextXAlignment.Left

            KeyBindKeyBack.Name = "KeyBindKeyBack"
            KeyBindKeyBack.Parent = KeyBindBack
            KeyBindKeyBack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            KeyBindKeyBack.ClipsDescendants = true
            KeyBindKeyBack.Position = UDim2.new(0.834965587, 0, 0.150000215, 0)
            KeyBindKeyBack.Size = UDim2.new(0, 54, 0, 20)

            UICorner_10.CornerRadius = UDim.new(0, 3)
            UICorner_10.Parent = KeyBindKeyBack

            KeyBindKey.Name = "KeyBindKey"
            KeyBindKey.Parent = KeyBindKeyBack
            KeyBindKey.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            KeyBindKey.BackgroundTransparency = 1.000
            KeyBindKey.Position = UDim2.new(0.055555556, 0, 0, 0)
            KeyBindKey.Size = UDim2.new(0, 48, 0, 19)
            KeyBindKey.Font = Enum.Font.GothamSemibold
            KeyBindKey.Text = key
            KeyBindKey.TextColor3 = Color3.fromRGB(3, 146, 255)
            KeyBindKey.TextScaled = true
            KeyBindKey.TextSize = 14.000
            KeyBindKey.TextWrapped = true

            KeyBindIntercept.Name = "KeyBindIntercept"
            KeyBindIntercept.Parent = KeyBindBack
            KeyBindIntercept.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            KeyBindIntercept.BackgroundTransparency = 1.000
            KeyBindIntercept.Position = UDim2.new(0, 0, -1.05233028e-06, 0)
            KeyBindIntercept.Size = UDim2.new(0, 369, 0, 29)

            local enabled = false;
            local listening = false;
            local toggle = false
            local bindBtn = KeyBindKey
                
            game:GetService("UserInputService").InputBegan:Connect(function(input, onGui)
                if onGui then return; end;
                
                if listening and not activated then
                    pcall(function()
                        bindBtn.Text = tostring(input.KeyCode.Name);
                        listening = false;
                        keyCode = input.KeyCode;
                        activated = true;
                    end);
                elseif activated and not listening and input.KeyCode == keyCode then
                    enabled = not enabled;
		    callback(enabled);
                end;
            end);
                
            KeyBindBack.MouseButton1Click:Connect(function()
                bindBtn.Text = "...";
                bindBtn.TextTransparency = 0.5
                for i = 1, 5 do
                    bindBtn.TextTransparency = bindBtn.TextTransparency - 0.1
                    wait()
                end
                activated = false;
                listening = true;
            end);
        end
		
	return Lib
		
	end
	
	return TabHolded
	
end

return Library
